# src/fastlane/Fastfile
default_platform(:ios)

platform :ios do
  desc "Build iOS app for personal development"
  lane :build_dev do
    build_app(
      workspace: "#{ENV['APP_NAME']}.xcworkspace",
      scheme: "#{ENV['APP_NAME']}",
      clean: true,
      configuration: "Debug",
      output_directory: "./build",
      output_name: "#{ENV['APP_NAME']}.ipa",
      include_symbols: true,
      skip_profile_detection: true,
      xcargs: "-allowProvisioningUpdates",
      export_options: {
        method: "development",
        signing_style: "automatic",
        compile_bitcode: false,
        team_id: ENV["TEAM_ID"]
      },
      
    )
  end

  desc "Build release iOS app"
  lane :build do    
    update_project_team(
      path: "#{ENV['APP_NAME']}.xcodeproj",
      teamid: ENV["TEAM_ID"]
    )
    
    gym(
      workspace: "#{ENV['APP_NAME']}.xcworkspace",
      scheme: "#{ENV['APP_NAME']}",
      clean: true,
      configuration: "Release",
      export_method: "app-store",
      output_directory: "./build",
      output_name: "#{ENV['APP_NAME']}.ipa",
      include_bitcode: false,
      include_symbols: true,
      export_options: {
        method: "app-store",
        signing_style: "automatic", 
        team_id: ENV["TEAM_ID"]
      },
      xcargs: "-allowProvisioningUpdates"
    )
  end
end

platform :android do
  desc "Runs all the tests"
  lane :test do
    gradle(task: "test")
  end

  desc "Submit a new Beta Build to Crashlytics Beta"
  lane :beta do
    gradle(task: "clean assembleRelease")
    crashlytics
  
    # sh "your_script.sh"
    # You can also use other beta testing services here
  end

  desc "Build Android app"
  lane :build do
    gradle(task: "clean bundleRelease", 
    properties: {
      "android.injected.signing.store.file" => "#{ENV['KEYSTORE_PATH']}",
      "android.injected.signing.store.password" => "#{ENV['KEYSTORE_PASSWORD']}",
      "android.injected.signing.key.alias" => "#{ENV['KEY_ALIAS']}",
      "android.injected.signing.key.password" => "#{ENV['KEY_PASSWORD']}",
    })
  end
end
